{"ast":null,"code":"import { createElementVNode as _createElementVNode, vModelText as _vModelText, withDirectives as _withDirectives, withModifiers as _withModifiers, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\";\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", null, [_cache[4] || (_cache[4] = _createElementVNode(\"h2\", null, \"Отправка средств\", -1 /* HOISTED */)), _createElementVNode(\"form\", {\n    onSubmit: _cache[2] || (_cache[2] = _withModifiers((...args) => $options.sendTransaction && $options.sendTransaction(...args), [\"prevent\"]))\n  }, [_withDirectives(_createElementVNode(\"input\", {\n    type: \"text\",\n    \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => $data.receiver = $event),\n    placeholder: \"Получатель\"\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, $data.receiver]]), _withDirectives(_createElementVNode(\"input\", {\n    type: \"number\",\n    \"onUpdate:modelValue\": _cache[1] || (_cache[1] = $event => $data.amount = $event),\n    placeholder: \"Сумма\"\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, $data.amount]]), _cache[3] || (_cache[3] = _createElementVNode(\"button\", {\n    type: \"submit\"\n  }, \"Отправить\", -1 /* HOISTED */))], 32 /* NEED_HYDRATION */)]);\n}","map":{"version":3,"names":["_createElementBlock","_createElementVNode","onSubmit","_cache","_withModifiers","args","$options","sendTransaction","type","$event","$data","receiver","placeholder","amount"],"sources":["/Users/andrejkamanin/Documents/LedgerCore/blockchain-frontend/src/components/TransactionDeposit.vue"],"sourcesContent":["<template>\n  <div>\n    <h2>Отправка средств</h2>\n    <form @submit.prevent=\"sendTransaction\">\n      <input type=\"text\" v-model=\"receiver\" placeholder=\"Получатель\" />\n      <input type=\"number\" v-model=\"amount\" placeholder=\"Сумма\" />\n      <button type=\"submit\">Отправить</button>\n    </form>\n  </div>\n</template>\n\n<script>\nexport default {\n  props: ['username'],\n  data() {\n    return {\n      receiver: '',\n      amount: 0\n    };\n  },\n  methods: {\n    sendTransaction() {\n      fetch(`http://localhost:8080/api/transaction?sender=${this.username}`, {\n        method: 'POST',\n        headers: { 'Content-Type': 'application/json' },\n        body: JSON.stringify({\n          receiver: this.receiver,\n          amount: this.amount\n        })\n      })\n        .then(response => response.text())\n        .then(data => {\n          console.log(data);\n          alert('Транзакция выполнена успешно!');\n        })\n        .catch(error => console.error('Error during transaction:', error));\n    }\n  }\n};\n</script>\n"],"mappings":";;uBACEA,mBAAA,CAOM,c,0BANJC,mBAAA,CAAyB,YAArB,kBAAgB,sBACpBA,mBAAA,CAIO;IAJAC,QAAM,EAAAC,MAAA,QAAAA,MAAA,MAHjBC,cAAA,KAAAC,IAAA,KAG2BC,QAAA,CAAAC,eAAA,IAAAD,QAAA,CAAAC,eAAA,IAAAF,IAAA,CAAe;sBACpCJ,mBAAA,CAAiE;IAA1DO,IAAI,EAAC,MAAM;IAJxB,uBAAAL,MAAA,QAAAA,MAAA,MAAAM,MAAA,IAIkCC,KAAA,CAAAC,QAAQ,GAAAF,MAAA;IAAEG,WAAW,EAAC;iDAAtBF,KAAA,CAAAC,QAAQ,E,mBACpCV,mBAAA,CAA4D;IAArDO,IAAI,EAAC,QAAQ;IAL1B,uBAAAL,MAAA,QAAAA,MAAA,MAAAM,MAAA,IAKoCC,KAAA,CAAAG,MAAM,GAAAJ,MAAA;IAAEG,WAAW,EAAC;iDAApBF,KAAA,CAAAG,MAAM,E,6BACpCZ,mBAAA,CAAwC;IAAhCO,IAAI,EAAC;EAAQ,GAAC,WAAS,qB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}