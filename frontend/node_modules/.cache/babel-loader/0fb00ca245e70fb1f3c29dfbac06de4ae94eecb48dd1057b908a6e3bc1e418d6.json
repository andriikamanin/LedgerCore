{"ast":null,"code":"import { createElementVNode as _createElementVNode, toDisplayString as _toDisplayString, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\";\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", null, [_cache[1] || (_cache[1] = _createElementVNode(\"h1\", null, \"Service Status\", -1 /* HOISTED */)), _createElementVNode(\"p\", null, _toDisplayString($data.status), 1 /* TEXT */), _createElementVNode(\"button\", {\n    onClick: _cache[0] || (_cache[0] = (...args) => $options.checkStatus && $options.checkStatus(...args))\n  }, \"Check Status\")]);\n}","map":{"version":3,"names":["_createElementBlock","_createElementVNode","_toDisplayString","$data","status","onClick","_cache","args","$options","checkStatus"],"sources":["/Users/andrejkamanin/Documents/blockchain-frontend/src/components/Status.vue"],"sourcesContent":["<template>\n  <div>\n    <h1>Service Status</h1>\n    <p>{{ status }}</p>\n    <button @click=\"checkStatus\">Check Status</button>\n  </div>\n</template>\n\n<script>\nimport axios from 'axios';\n\nexport default {\n  data() {\n    return {\n      status: 'Not checked yet'\n    };\n  },\n  methods: {\n    async checkStatus() {\n      try {\n        const response = await axios.get('http://localhost:8080/api/status'); // или другой URL\n        this.status = response.data;\n      } catch (error) {\n        console.error('Error checking status:', error);\n        this.status = 'Error checking status';\n      }\n    }\n  }\n};\n</script>\n"],"mappings":";;uBACEA,mBAAA,CAIM,c,0BAHJC,mBAAA,CAAuB,YAAnB,gBAAc,sBAClBA,mBAAA,CAAmB,WAAAC,gBAAA,CAAbC,KAAA,CAAAC,MAAM,kBACZH,mBAAA,CAAkD;IAAzCI,OAAK,EAAAC,MAAA,QAAAA,MAAA,UAAAC,IAAA,KAAEC,QAAA,CAAAC,WAAA,IAAAD,QAAA,CAAAC,WAAA,IAAAF,IAAA,CAAW;KAAE,cAAY,E","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}