{"ast":null,"code":"export default {\n  props: ['username'],\n  data() {\n    return {\n      receiver: '',\n      // Получатель транзакции\n      amount: 0,\n      // Сумма для транзакции\n      transactionStatus: null // Статус транзакции\n    };\n  },\n  methods: {\n    // Метод для отправки транзакции на сервер\n    sendTransaction() {\n      if (!this.username) {\n        alert('Пожалуйста, войдите, указав имя пользователя!');\n        return;\n      }\n      if (this.amount <= 0) {\n        alert('Сумма должна быть больше нуля!');\n        return;\n      }\n\n      // Отправляем транзакцию на сервер\n      fetch('http://localhost:8080/api/transaction', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          sender: this.username,\n          // Имя отправителя\n          receiver: this.receiver,\n          // Имя получателя\n          amount: this.amount // Сумма транзакции\n        })\n      }).then(response => {\n        if (!response.ok) {\n          throw new Error('Ошибка при отправке транзакции');\n        }\n        return response.text();\n      }).then(response => {\n        if (!response.ok) {\n          throw new Error('Ошибка при отправке транзакции');\n        }\n        return response.text();\n      }).then(() => {\n        this.transactionStatus = {\n          success: true,\n          message: 'Транзакция выполнена успешно!'\n        };\n      }).catch(error => {\n        console.error('Ошибка при отправке транзакции:', error);\n        this.transactionStatus = {\n          success: false,\n          message: 'Ошибка при отправке транзакции. Попробуйте снова.'\n        };\n      });\n    }\n  }\n};","map":{"version":3,"names":["props","data","receiver","amount","transactionStatus","methods","sendTransaction","username","alert","fetch","method","headers","body","JSON","stringify","sender","then","response","ok","Error","text","success","message","catch","error","console"],"sources":["/Users/andrejkamanin/Documents/LedgerCore/blockchain-frontend/src/components/TransactionDeposit.vue"],"sourcesContent":["<template>\n  <div>\n    <h2>Отправка средств</h2>\n    <form @submit.prevent=\"sendTransaction\">\n      <div>\n        <label for=\"receiver\">Получатель:</label>\n        <input \n          id=\"receiver\" \n          type=\"text\" \n          v-model=\"receiver\" \n          placeholder=\"Получатель\" \n          required \n        />\n      </div>\n      <div>\n        <label for=\"amount\">Сумма:</label>\n        <input \n          id=\"amount\" \n          type=\"number\" \n          v-model=\"amount\" \n          placeholder=\"Сумма\" \n          required \n          min=\"0.01\" \n        />\n      </div>\n      <button type=\"submit\">Отправить</button>\n    </form>\n\n    <!-- Показываем статус транзакции -->\n    <div v-if=\"transactionStatus\">\n      <p :class=\"transactionStatus.success ? 'success' : 'error'\">\n        {{ transactionStatus.message }}\n      </p>\n    </div>\n  </div>\n</template>\n\n<script>\nexport default {\n  props: ['username'],\n  data() {\n    return {\n      receiver: '',            // Получатель транзакции\n      amount: 0,               // Сумма для транзакции\n      transactionStatus: null, // Статус транзакции\n    };\n  },\n  methods: {\n    // Метод для отправки транзакции на сервер\n    sendTransaction() {\n      if (!this.username) {\n        alert('Пожалуйста, войдите, указав имя пользователя!');\n        return;\n      }\n\n      if (this.amount <= 0) {\n        alert('Сумма должна быть больше нуля!');\n        return;\n      }\n\n      // Отправляем транзакцию на сервер\n      fetch('http://localhost:8080/api/transaction', {\n        method: 'POST',\n        headers: { 'Content-Type': 'application/json' },\n        body: JSON.stringify({\n          sender: this.username, // Имя отправителя\n          receiver: this.receiver, // Имя получателя\n          amount: this.amount,    // Сумма транзакции\n        })\n      })\n        .then(response => {\n          if (!response.ok) {\n            throw new Error('Ошибка при отправке транзакции');\n          }\n          return response.text();\n        })\n        .then(response => {\n          if (!response.ok) {\n            throw new Error('Ошибка при отправке транзакции');\n          }\n          return response.text();\n        })      \n        .then(() => {\n          this.transactionStatus = {\n            success: true,\n            message: 'Транзакция выполнена успешно!',\n          };\n        })\n\n        .catch(error => {\n          console.error('Ошибка при отправке транзакции:', error);\n          this.transactionStatus = {\n            success: false,\n            message: 'Ошибка при отправке транзакции. Попробуйте снова.',\n          };\n        });\n    }\n  }\n};\n</script>\n\n<style scoped>\n.success {\n  color: green;\n}\n\n.error {\n  color: red;\n}\n</style>\n"],"mappings":"AAsCA,eAAe;EACbA,KAAK,EAAE,CAAC,UAAU,CAAC;EACnBC,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,QAAQ,EAAE,EAAE;MAAa;MACzBC,MAAM,EAAE,CAAC;MAAgB;MACzBC,iBAAiB,EAAE,IAAI,CAAE;IAC3B,CAAC;EACH,CAAC;EACDC,OAAO,EAAE;IACP;IACAC,eAAeA,CAAA,EAAG;MAChB,IAAI,CAAC,IAAI,CAACC,QAAQ,EAAE;QAClBC,KAAK,CAAC,+CAA+C,CAAC;QACtD;MACF;MAEA,IAAI,IAAI,CAACL,MAAK,IAAK,CAAC,EAAE;QACpBK,KAAK,CAAC,gCAAgC,CAAC;QACvC;MACF;;MAEA;MACAC,KAAK,CAAC,uCAAuC,EAAE;QAC7CC,MAAM,EAAE,MAAM;QACdC,OAAO,EAAE;UAAE,cAAc,EAAE;QAAmB,CAAC;QAC/CC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;UACnBC,MAAM,EAAE,IAAI,CAACR,QAAQ;UAAE;UACvBL,QAAQ,EAAE,IAAI,CAACA,QAAQ;UAAE;UACzBC,MAAM,EAAE,IAAI,CAACA,MAAM,CAAK;QAC1B,CAAC;MACH,CAAC,EACEa,IAAI,CAACC,QAAO,IAAK;QAChB,IAAI,CAACA,QAAQ,CAACC,EAAE,EAAE;UAChB,MAAM,IAAIC,KAAK,CAAC,gCAAgC,CAAC;QACnD;QACA,OAAOF,QAAQ,CAACG,IAAI,CAAC,CAAC;MACxB,CAAC,EACAJ,IAAI,CAACC,QAAO,IAAK;QAChB,IAAI,CAACA,QAAQ,CAACC,EAAE,EAAE;UAChB,MAAM,IAAIC,KAAK,CAAC,gCAAgC,CAAC;QACnD;QACA,OAAOF,QAAQ,CAACG,IAAI,CAAC,CAAC;MACxB,CAAC,EACAJ,IAAI,CAAC,MAAM;QACV,IAAI,CAACZ,iBAAgB,GAAI;UACvBiB,OAAO,EAAE,IAAI;UACbC,OAAO,EAAE;QACX,CAAC;MACH,CAAC,EAEAC,KAAK,CAACC,KAAI,IAAK;QACdC,OAAO,CAACD,KAAK,CAAC,iCAAiC,EAAEA,KAAK,CAAC;QACvD,IAAI,CAACpB,iBAAgB,GAAI;UACvBiB,OAAO,EAAE,KAAK;UACdC,OAAO,EAAE;QACX,CAAC;MACH,CAAC,CAAC;IACN;EACF;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}