{"ast":null,"code":"import { resolveComponent as _resolveComponent, createVNode as _createVNode, openBlock as _openBlock, createElementBlock as _createElementBlock, createCommentVNode as _createCommentVNode, toDisplayString as _toDisplayString, createElementVNode as _createElementVNode } from \"vue\";\nconst _hoisted_1 = {\n  id: \"app\"\n};\nconst _hoisted_2 = {\n  key: 0\n};\nconst _hoisted_3 = {\n  key: 1\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_Login = _resolveComponent(\"Login\");\n  const _component_Status = _resolveComponent(\"Status\");\n  const _component_Deposit = _resolveComponent(\"Deposit\");\n  const _component_ShowBlockchain = _resolveComponent(\"ShowBlockchain\");\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [!$data.isLoggedIn ? (_openBlock(), _createElementBlock(\"div\", _hoisted_2, [_createVNode(_component_Login, {\n    onLoggedIn: $options.handleLogin\n  }, null, 8 /* PROPS */, [\"onLoggedIn\"])])) : (_openBlock(), _createElementBlock(\"div\", _hoisted_3, [_createElementVNode(\"h1\", null, \"Добро пожаловать, \" + _toDisplayString($data.username), 1 /* TEXT */), _createVNode(_component_Status), _createVNode(_component_Deposit, {\n    username: $data.username\n  }, null, 8 /* PROPS */, [\"username\"]), _createVNode(_component_ShowBlockchain)]))]);\n}","map":{"version":3,"names":["id","key","_createElementBlock","_hoisted_1","$data","isLoggedIn","_hoisted_2","_createVNode","_component_Login","onLoggedIn","$options","handleLogin","_hoisted_3","_createElementVNode","_toDisplayString","username","_component_Status","_component_Deposit","_component_ShowBlockchain"],"sources":["/Users/andrejkamanin/Documents/LedgerCore/blockchain-frontend/src/App.vue"],"sourcesContent":["<template>\n  <div id=\"app\">\n    <div v-if=\"!isLoggedIn\">\n      <Login @logged-in=\"handleLogin\" />\n    </div>\n    <div v-else>\n      <h1>Добро пожаловать, {{ username }}</h1>\n      <Status />\n      <Deposit :username=\"username\" />\n      <ShowBlockchain />\n    </div>\n  </div>\n</template>\n\n<script>\nimport Login from './components/LoginPage';\nimport Status from './components/BlockchainStatus';\nimport Deposit from './components/TransactionDeposit';\nimport ShowBlockchain from './components/ShowBlockchain';\n\nexport default {\n  data() {\n    return {\n      username: '',\n      isLoggedIn: false\n    };\n  },\n  components: {\n    Login,\n    Status,\n    Deposit,\n    ShowBlockchain\n  },\n  methods: {\n    handleLogin(username) {\n      this.username = username;\n      this.isLoggedIn = true;\n    }\n  }\n};\n</script>\n"],"mappings":";;EACOA,EAAE,EAAC;AAAK;;EADfC,GAAA;AAAA;;EAAAA,GAAA;AAAA;;;;;;uBACEC,mBAAA,CAUM,OAVNC,UAUM,G,CATQC,KAAA,CAAAC,UAAU,I,cAAtBH,mBAAA,CAEM,OAJVI,UAAA,GAGMC,YAAA,CAAkCC,gBAAA;IAA1BC,UAAS,EAAEC,QAAA,CAAAC;EAAW,wC,oBAEhCT,mBAAA,CAKM,OAVVU,UAAA,GAMMC,mBAAA,CAAyC,YAArC,oBAAkB,GAAAC,gBAAA,CAAGV,KAAA,CAAAW,QAAQ,kBACjCR,YAAA,CAAUS,iBAAA,GACVT,YAAA,CAAgCU,kBAAA;IAAtBF,QAAQ,EAAEX,KAAA,CAAAW;EAAQ,uCAC5BR,YAAA,CAAkBW,yBAAA,E","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}